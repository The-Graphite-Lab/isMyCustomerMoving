# Byte-compiled / optimized / DLL files
backend/accounts/__pycache__/
backend/config/__pycache__/
backend/payments/__pycache__/
backend/payments/migrations/__pycache__/
backend/accounts/management/commands/__pycache__/
backend/accounts/migrations/__pycache__/
backend/accounts/migrations1/
backend/accounts/tests/__pycache__/
backend/data/__pycache__/
backend/data/migrations/__pycache__/
backend/data/management/commands/__pycache__/
backend/data/tests/__pycache__/
backend/*.py[cod]
backend/*$py.class

# C extensions
backend/*.so

# Distribution / packaging
backend/.Python
backend/build/
backend/develop-eggs/
backend/dist/
backend/downloads/
backend/eggs/
backend/.eggs/
backend/lib/
backend/lib64/
backend/parts/
backend/sdist/
backend/var/
backend/wheels/
backend/pip-wheel-metadata/
backend/share/python-wheels/
backend/*.egg-info/
backend/.installed.cfg
backend/*.egg
backend/MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
backend/*.manifest
backend/*.spec

# Installer logs
backend/pip-log.txt
backend/pip-delete-this-directory.txt

# Unit test / coverage reports
backend/htmlcov/
backend/.tox/
backend/.nox/
backend/.coverage
backend/.coverage.*
backend/.cache
backend/nosetests.xml
backend/coverage.xml
backend/*.cover
backend/*.py,cover
backend/.hypothesis/
backend/.pytest_cache/

# Translations
backend/*.mo
backend/*.pot

# Django stuff:
backend/*.log
backend/local_settings.py
backend/db.sqlite3
backend/db.sqlite3-journal

# Flask stuff:
backend/instance/
backend/.webassets-cache

# Scrapy stuff:
backend/.scrapy

# Sphinx documentation
backend/docs/_build/

# PyBuilder
backend/target/

# Jupyter Notebook
backend/.ipynb_checkpoints

# IPython
backend/profile_default/
backend/ipython_config.py

# pyenv
backend/.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
backend/__pypackages__/

# Celery stuff
backend/celerybeat-schedule
backend/celerybeat.pid

# SageMath parsed files
backend/*.sage.py

# Environments
backend/config/.env
backend/.venv
backend/env
backend/venv/
backend/ENV/
backend/env.bak/
backend/venv.bak/

# Spyder project settings
backend/.spyderproject
backend/.spyproject

# Rope project settings
backend/.ropeproject

# mkdocs documentation
backend//site

# mypy
backend/.mypy_cache/
backend/.dmypy.json
backend/dmypy.json

# Pyre type checker
backend/.pyre/
backend/staticfiles
backend/node_modules

backend/package.json
backend/yarn.lock


# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.

# dependencies
frontend/node_modules
frontend/.pnp
frontend/.pnp.js

# testing
frontend/coverage

# production
frontend/build

# misc
frontend/.DS_Store
frontend/.env
frontend/.env.local
frontend/.env.development.local
frontend/.env.test.local
frontend/.env.production.local

frontend/npm-debug.log*
frontend/yarn-debug.log*
frontend/yarn-error.log*

frontend/.eslintcache

frontend/package.json
frontend/yarn.lock

oldJsons
sep*
.DS_Store
venv/

backend/accounts/migrations/__pycache__

website/
backend/accounts/utils.py
backend/dump.rdb
.gitignore
backend/twoFactor/__pycache__/__init__.cpython-310.pyc
backend/twoFactor/__pycache__/admin.cpython-310.pyc
backend/twoFactor/__pycache__/apps.cpython-310.pyc
backend/twoFactor/__pycache__/models.cpython-310.pyc
backend/authz/__pycache__/
backend/authz/__pycache__/
backend/common/utils/__pycache__/
backend/requirements_old.txt
.env.testing
backend/__pycache__/conftest.cpython-310-pytest-7.2.2.pyc
backend/conftest.py
backend/.env
backend/.env.testing

backend/downloadedData/

data/db/
backend/*.json
